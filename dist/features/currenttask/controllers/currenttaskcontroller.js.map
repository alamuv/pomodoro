{"version":3,"sources":["../../../../client/features/currenttask/controllers/currenttaskcontroller.js"],"names":[],"mappings":";;AAAA,IAAM,cAAc,QAAQ,MAAR,CAAe,aAAf,EAA8B,EAA9B,CAApB;;AAEA,YAAY,UAAZ,CAAuB,uBAAvB,EAAgD,UAAS,MAAT,EAAiB,UAAjB,EAA6B,WAA7B,EAA0C;;AAExF,SAAO,WAAP;;;AAGA,SAAO,YAAP,GAAsB,UAAC,MAAD,EAAY;AAChC,QAAI,OAAO,eAAX,EAA4B,OAAO,eAAP;AAC5B,WAAO,WAAP,CAAmB,SAAnB;AACA,gBAAY,OAAZ,CAAoB,OAAO,WAAP,CAAmB,GAAvC,EAA4C,OAAO,WAAnD;;AAEA,eAAW,UAAX,CAAsB,iBAAtB,EAAyC,OAAO,WAAP,CAAmB,SAA5D;AACD,GAND;;AAQA,SAAO,iBAAP,GAA2B,UAAC,MAAD,EAAY;AACrC,QAAI,OAAO,eAAX,EAA4B,OAAO,eAAP;AAC5B,WAAO,WAAP,CAAmB,SAAnB,GAA+B,KAAK,GAAL,CAAS,CAAT,EAAY,EAAE,OAAO,WAAP,CAAmB,SAAjC,CAA/B;AACA,gBAAY,OAAZ,CAAoB,OAAO,WAAP,CAAmB,GAAvC,EAA4C,OAAO,WAAnD;;AAEA,eAAW,UAAX,CAAsB,iBAAtB,EAAyC,OAAO,WAAP,CAAmB,SAA5D;AACD,GAND;AAOA,aAAW,GAAX,CAAe,wBAAf,EAAyC,YAAM;AAC7C,WAAO,iBAAP,CAAyB,OAAO,WAAhC;AACD,GAFD;;AAIA,SAAO,iBAAP,GAA2B,UAAC,MAAD,EAAY;AACrC,QAAI,OAAO,eAAX,EAA4B,OAAO,eAAP;AAC5B,gBAAY,UAAZ,CAAuB,OAAO,WAAP,CAAmB,GAA1C;AACA,WAAO,WAAP,GAAqB,SAArB;AACD,GAJD;AAKA,aAAW,GAAX,CAAe,mBAAf,EAAoC,OAAO,iBAA3C;;;AAGA,MAAM,YAAY,SAAZ,SAAY,CAAC,KAAD,EAAQ,IAAR,EAAiB;;AAEjC,QAAI,OAAO,WAAP,KAAuB,SAA3B,EAAsC;AACpC,iBAAW,UAAX,CAAsB,aAAtB,EAAqC,OAAO,WAA5C;AACA,iBAAW,UAAX,CAAsB,iBAAtB,EAAyC,OAAO,WAAP,CAAmB,SAA5D;AACD;;AAED,WAAO,WAAP,GAAqB,IAArB;;AAEA,eAAW,UAAX,CAAsB,YAAtB;;AAED,GAXD;AAYA,aAAW,GAAX,CAAe,WAAf,EAA4B,SAA5B;;AAEA,SAAO,QAAP,GAAkB,UAAC,MAAD,EAAY;AAC5B,WAAO,eAAP;AACA,eAAW,UAAX,CAAsB,UAAtB,EAAkC,OAAO,WAAzC;AACD,GAHD;AAID,CAlDD","file":"currenttaskcontroller.js","sourcesContent":["const currentTask = angular.module('currentTask', []);\n\ncurrentTask.controller('currentTaskController', function($scope, $rootScope, httpFactory) {\n  \n  $scope.currentTask;\n\n  // Adds additional pomodoros to the task\n  $scope.addPomodoros = ($event) => {\n    if ($event.stopPropagation) $event.stopPropagation();\n    $scope.currentTask.pomodoros++;\n    httpFactory.putTask($scope.currentTask._id, $scope.currentTask);\n    // Sends updated pomodoro number to timer\n    $rootScope.$broadcast('updatePomodoros', $scope.currentTask.pomodoros);\n  };\n  // Removes pomodoros from the task\n  $scope.subtractPomodoros = ($event) => {\n    if ($event.stopPropagation) $event.stopPropagation();\n    $scope.currentTask.pomodoros = Math.max(1, --$scope.currentTask.pomodoros);\n    httpFactory.putTask($scope.currentTask._id, $scope.currentTask);\n    // Sends updated pomodoro number to timer\n    $rootScope.$broadcast('updatePomodoros', $scope.currentTask.pomodoros);\n  };\n  $rootScope.$on('reduceCurrentPomodoros', () => {\n    $scope.subtractPomodoros($scope.currentTask);\n  });\n\n  $scope.deleteCurrentTask = ($event) => {\n    if ($event.stopPropagation) $event.stopPropagation();\n    httpFactory.deleteTask($scope.currentTask._id);\n    $scope.currentTask = undefined;\n  };\n  $rootScope.$on('deleteCurrentTask', $scope.deleteCurrentTask);\n\n  // Change the 'current task'\n  const stageTask = (event, task) => {\n    // Sends currentTask back to the taskListController\n    if ($scope.currentTask !== undefined) {\n      $rootScope.$broadcast('unstageTask', $scope.currentTask);\n      $rootScope.$broadcast('updatePomodoros', $scope.currentTask.pomodoros);\n    }\n    // Sets the clicked task as the current task, removes it from the task list\n    $scope.currentTask = task;\n    // Resets timer\n    $rootScope.$broadcast('resetTimer');\n    // Sends updated pomodoro number to timer\n  };\n  $rootScope.$on('stageTask', stageTask);\n\n  $scope.editTask = ($event) => {\n    $event.stopPropagation();\n    $rootScope.$broadcast('editTask', $scope.currentTask);\n  }\n});"]}